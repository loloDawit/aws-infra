name: Terraform Deployment

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  bootstrap-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDC
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (Backend)
        run: |
          cd envs/bootstrap
          terraform init -input=false

      - name: Terraform Apply (Create Backend)
        run: |
          cd envs/bootstrap
          terraform apply -auto-approve -input=false

  terraform-deploy:
    needs: bootstrap-backend  # âœ… Ensures this waits for backend creation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDC
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init (Main Infrastructure)
        run: |
          cd envs/dev
          terraform init -input=false

      - name: Terraform Plan (Main Infrastructure)
        run: |
          cd envs/dev
          terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply (Main Infrastructure)
        if: github.ref == 'refs/heads/main'
        run: |
          cd envs/dev
          terraform apply -auto-approve -input=false -var-file=terraform.tfvars
